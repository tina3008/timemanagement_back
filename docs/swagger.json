{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Taskts",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is Task app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://timemanagement-back.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Operation with Tasks"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all Tasks",
        "operationId": "getTasksController",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "sortOrder"
            },
            "description": "All Task's fields. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "taskType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found Tasks!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Tasks!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tasks"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create task",
        "operationId": "createTask",
        "description": "Create a task with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "task",
                  "timeDeclaration",
                  "taskType",
                  "date",
                  "status"
                ],
                "properties": {
                  "task": {
                    "definitions": "task name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "timeDeclaration": {
                    "definitions": "task's time, min",
                    "type": "number",
                    "example": 120
                  },
                  "date": {
                    "definitions": "task's date & time",
                    "type": "date",
                    "example": "2025-09-10T18:10:00.000+00:10"
                  },
                  "isFavourite": {
                    "definitions": "Would you like or not?",
                    "type": "boolean",
                    "example": false
                  },
                  "taskType": {
                    "definitions": "task's work place",
                    "type": "string",
                    "example": "work",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "default": "personal"
                  },
                  "status": {
                    "definitions": "task's status",
                    "type": "string",
                    "example": "pending",
                    "enum": [
                      "completed",
                      "pending",
                      "working"
                    ],
                    "default": "personal"
                  },
                  "timeReal": {
                    "definitions": "task's time, min",
                    "type": "number",
                    "example": 120
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a task!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/tasks"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get stask by id",
        "operationId": "getTaskIDController",
        "description": "Get Task by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Task by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Task with id 6692528c222b4be7b4b17ebd!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/tasks"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "taskRouterTaskstags": [
          "Tasks"
        ],
        "summary": "Delete task",
        "operationId": "deleteTask",
        "description": "Delete a task from DB",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete task by id"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Change task by ID",
        "operationId": "ChangeTask",
        "description": "Change a task by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "definitions": "task name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "timeDeclaration": {
                    "definitions": "task's time, min",
                    "type": "number",
                    "example": 120
                  },
                  "date": {
                    "definitions": "task's date & time",
                    "type": "date",
                    "example": "2025-09-10T18:10:00.000+00:10"
                  },
                  "isFavourite": {
                    "definitions": "Would you like or not?",
                    "type": "boolean",
                    "example": false
                  },
                  "taskType": {
                    "definitions": "task's work place",
                    "type": "string",
                    "example": "work",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "default": "personal"
                  },
                  "status": {
                    "definitions": "task's status",
                    "type": "string",
                    "example": "pending",
                    "enum": [
                      "completed",
                      "pending",
                      "working"
                    ],
                    "default": "personal"
                  },
                  "timeReal": {
                    "definitions": "task's time, min",
                    "type": "number",
                    "example": 120
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change a task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully changed a task!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/tasks"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/note": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get all Notes",
        "operationId": "getNotesController",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "sortOrder"
            },
            "description": "All Note's fields. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found Notes!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Notes!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/notes"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create note",
        "operationId": "createNote",
        "description": "Create a note with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "note"
                ],
                "properties": {
                  "note": {
                    "definitions": "note name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a note!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/notes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/note/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get Note by id",
        "operationId": "getNoteIDController",
        "description": "Get Note by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Note by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Note with id 6692528c222b4be7b4b17ebd!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/notes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "noteRouterNotestags": [
          "Notes"
        ],
        "summary": "Delete note",
        "operationId": "deleteNote",
        "description": "Delete a note from DB",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete note by id"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Change Note by ID",
        "operationId": "ChangeNote",
        "description": "Change a Note by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "definitions": "Note name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change a Note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully changed a Note!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/notes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/resurse": {
      "get": {
        "tags": [
          "resurses"
        ],
        "summary": "Get all resurses",
        "operationId": "getResursesController",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "sortOrder"
            },
            "description": "All resurse's fields. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "resurseType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found resurses!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found resurses!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/resurses"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Resurses"
        ],
        "summary": "Create resurse",
        "operationId": "createResurse",
        "description": "Create a resurse with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "resurse"
                ],
                "properties": {
                  "resurse": {
                    "definitions": "resurse's name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "category": {
                    "definitions": "category name",
                    "type": "string",
                    "example": "favorite"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a resurse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a resurse!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/resurses"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/resurse/{id}": {
      "get": {
        "tags": [
          "Resurses"
        ],
        "summary": "Get resurse by id",
        "operationId": "getResurseIDController",
        "description": "Get resurse by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get resurse by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found resurse with id 6692528c222b4be7b4b17ebd!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/resurses"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "resurseRouterResursestags": [
          "Resurses"
        ],
        "summary": "Delete resurse",
        "operationId": "delete Resurse",
        "description": "Delete a resurse from DB",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete resurse by id"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Resurses"
        ],
        "summary": "Change resurse by ID",
        "operationId": "ChangeResurse",
        "description": "Change a resurse by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resurse": {
                    "definitions": "resurse name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "category": {
                    "definitions": "category name",
                    "type": "string",
                    "example": "favorite"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change a resurse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully changed a resurse!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/resurses"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/confirm-auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with Google",
        "operationId": "confirmAuth",
        "description": "Confirm user authentication with Google",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accessToken"
                ],
                "properties": {
                  "accessToken": {
                    "description": "Google OAuth token",
                    "type": "string",
                    "example": "6Ug2i00+Id20XaepdQV5DYHifOudD56R+QBcYq0K"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirm user authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully user authentication!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logaut": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user and close session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "description": "active user'stoken",
                    "type": "string",
                    "example": "6Ug2i00+Id20XaepdQV5DYHifOudD56R+QBcYq0K"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout a user and close session"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginrUsert",
        "description": "Login a user ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "definitions": "user's email",
                    "type": "string",
                    "example": "dasd@fsdf.com"
                  },
                  "password": {
                    "definitions": "user's password",
                    "type": "string",
                    "example": "bbfdbhfds"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshUser",
        "description": "Refresh session token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "definitions": "Refresh session token",
                    "type": "string",
                    "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUsert",
        "description": "register user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "email": {
                    "definitions": "User's email",
                    "type": "string",
                    "example": "qwee3@example.com"
                  },
                  "password": {
                    "definitions": "User's password",
                    "type": "string",
                    "example": "frwer435"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registered a User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a User!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password using token",
        "operationId": "resetPasswordController",
        "description": "reset user's password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newPassword"
                ],
                "properties": {
                  "newPassword": {
                    "description": "New password for the user",
                    "type": "string",
                    "format": "password",
                    "example": "eqwrwet45"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reset User's password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "'Password was successfully reset!'"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request password reset",
        "operationId": "requestResetEmailController",
        "description": "Create a student with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "dwsaf@asd.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "password reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get OAuth URL",
        "operationId": "getGoogleOAuthUrlController",
        "description": "Get contact by URL",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth URL retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "string",
                      "example": "http://localhost:3000/confirm-google-auth?code=4%2F0AcvDMrDHDie7a1CjeoqFssnq4ybeHgS4rt79RLGvPmXnG84MBbX1Gzh4unFH4mJnkLMElA&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&authuser=0&prompt=consent"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "tasks": {
        "type": "object",
        "required": [
          "_id",
          "task",
          "timeDeclaration",
          "timeReal",
          "taskType",
          "date",
          "status",
          "userId"
        ],
        "properties": {
          "_id": {
            "definitions": "task's ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "task": {
            "definitions": "task",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "timeDeclaration": {
            "definitions": "120",
            "type": "number",
            "example": 120
          },
          "timeReal": {
            "definitions": "120",
            "type": "number",
            "example": 120
          },
          "isFavourite": {
            "definitions": "Would you like or not?",
            "type": "boolean",
            "example": false
          },
          "taskType": {
            "definitions": "task's work place",
            "type": "string",
            "example": "work",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "default": "personal"
          },
          "userId": {
            "definitions": "Autorth's task ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "date": {
            "definitions": "date",
            "type": "date",
            "example": "2025-09-13T18:10:00.000Z"
          },
          "status": {
            "definitions": "task's status",
            "type": "string",
            "example": "pending",
            "enum": [
              "completed",
              "pending",
              "working"
            ],
            "default": "pending"
          }
        }
      },
      "notes": {
        "type": "object",
        "required": [
          "_id",
          "note",
          "userId"
        ],
        "properties": {
          "_id": {
            "definitions": "note's ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "note": {
            "definitions": "note",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "timeDeclaration": {
            "definitions": "120",
            "type": "number",
            "example": 120
          },
          "timeReal": {
            "definitions": "120",
            "type": "number",
            "example": 120
          },
          "isFavourite": {
            "definitions": "Would you like or not?",
            "type": "boolean",
            "example": false
          },
          "userId": {
            "definitions": "Autorth's note ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          }
        }
      },
      "resurses": {
        "type": "object",
        "required": [
          "_id",
          "resurse",
          "userId"
        ],
        "properties": {
          "_id": {
            "definitions": "resurse's ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "resurse": {
            "definitions": "resurse",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "category": {
            "definitions": "favorite",
            "type": "string",
            "example": "favorite"
          },
          "userId": {
            "definitions": "Autorth's resurse ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          }
        }
      },
      "session": {
        "type": "object",
        "required": [
          "userId",
          "accessToken",
          "refreshToken",
          "accessTokenValidUntil",
          "refreshTokenValidUntil"
        ],
        "properties": {
          "userId": {
            "description": "Reference to the user",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "accessToken": {
            "description": "Access token for the session",
            "type": "string",
            "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
          },
          "refreshToken": {
            "description": "Refresh token for the session",
            "type": "string",
            "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
          },
          "accessTokenValidUntil": {
            "description": "Expiration date for the access token",
            "type": "string",
            "format": "date-time",
            "example": "Mon, 09 Sep. 09:20:31 GMT"
          },
          "refreshTokenValidUntil": {
            "description": "Expiration date for the refresh token",
            "type": "string",
            "format": "date-time",
            "example": "Mon, 09 Sep. 09:20:31 GMT"
          }
        }
      },
      "users": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password",
          "role"
        ],
        "properties": {
          "_id": {
            "definitions": "User's ID",
            "type": "string",
            "example": "6692528c222b4be7b4b17ebd"
          },
          "name": {
            "definitions": "full name",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "email": {
            "definitions": "User's email",
            "type": "string",
            "example": "qwee3@example.com"
          },
          "password": {
            "definitions": "User's email",
            "type": "string",
            "example": "grgr325"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Session expired",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Access token expired"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Route not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}